// Code generated by protoc-gen-go. DO NOT EDIT.
// source: changsha.proto

/*
Package changsha is a generated protocol buffer package.

changsha message optional from 2000-3000

It is generated from these files:
	changsha.proto

It has these top-level messages:
	CGJoinRoom
	GCPlayerInfo
	GCRoomInfo
	GCJoinRoom
	Compose
	GCJoinRoomBroadcast
	GCSelectBankerBroadcast
	GCDealCards
	XiaoHu
	XiaohuPlayer
	GCXiaoHuBroadcast
	CGPlayerPlayCard
	GCPlayerPlayCard
	GCPlayerMoCard
	GCPlayerMoCardBroadcast
	Operation
	GCPlayerOperations
	GCPlayerChi
	GCPlayerPeng
	GCPlayerGang
	GCPlayerBu
	RoundSettlePlayerInfo
	Hu
	GCPlayerHu
	GCWaitPlayerPlayCard
	CGPlayerOperate
	GCClear
	GCReconnectPlayer
	GCDisconnectPlayer
	GCPlayerGangMo
	CGPlayerLeave
	GCPlayerLeave
	CGPlayerStart
	GCPlayerStart
	CGPlayerDissolve
	GCPlayerDissolve
	CGPlayerDissolveAgree
	GCPlayerDissolveAgree
	GCLiuJu
	SettleInfo
	TotalSettlePlayerInfo
	GCTotalSettle
	GCXiaoHuList
	CGXiaoHu
	GCXiaoHu
	CGXiaoHuPass
	GCXiaoHuPass
	GCHaiDiAsk
	CGHaiDiAnswer
	GCHaiDiAnswer
	CGLeaveTime
	GCLeaveTime
	CGChat
	GCChat
*/
package changsha

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pb "game/basic/pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 加入房间
type CGJoinRoom struct {
	RoomId           *int64 `protobuf:"varint,1,req,name=roomId" json:"roomId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGJoinRoom) Reset()                    { *m = CGJoinRoom{} }
func (m *CGJoinRoom) String() string            { return proto.CompactTextString(m) }
func (*CGJoinRoom) ProtoMessage()               {}
func (*CGJoinRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CGJoinRoom) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 玩家基本信息
type GCPlayerInfo struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 玩家头像
	Image *string `protobuf:"bytes,2,req,name=image" json:"image,omitempty"`
	// ip
	Ip *string `protobuf:"bytes,3,req,name=ip" json:"ip,omitempty"`
	// 分数
	Score *int64 `protobuf:"varint,4,req,name=score" json:"score,omitempty"`
	// 位置
	Position *int32 `protobuf:"varint,5,req,name=position" json:"position,omitempty"`
	// 状态0离线，1上线，2暂离
	State *int32 `protobuf:"varint,6,req,name=state" json:"state,omitempty"`
	// 手牌
	CardNum *int32 `protobuf:"varint,7,opt,name=cardNum" json:"cardNum,omitempty"`
	// 手牌数
	CardList []int32 `protobuf:"varint,8,rep,name=cardList" json:"cardList,omitempty"`
	// 下的牌
	PlayCardList []int32 `protobuf:"varint,9,rep,name=playCardList" json:"playCardList,omitempty"`
	// 碰杠吃
	ComposeList []*Compose `protobuf:"bytes,10,rep,name=composeList" json:"composeList,omitempty"`
	// 实际状态
	ActualState *int32 `protobuf:"varint,11,req,name=actualState" json:"actualState,omitempty"`
	// 小胡列表
	XiaoHus []int32 `protobuf:"varint,12,rep,name=xiaoHus" json:"xiaoHus,omitempty"`
	// 是否听牌
	IfListen *bool `protobuf:"varint,13,req,name=ifListen" json:"ifListen,omitempty"`
	// 名称
	Name *string `protobuf:"bytes,14,req,name=name" json:"name,omitempty"`
	// 男女
	Sex *int32 `protobuf:"varint,15,req,name=sex" json:"sex,omitempty"`
	// 名称
	Location         *string `protobuf:"bytes,16,req,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GCPlayerInfo) Reset()                    { *m = GCPlayerInfo{} }
func (m *GCPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerInfo) ProtoMessage()               {}
func (*GCPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GCPlayerInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerInfo) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *GCPlayerInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *GCPlayerInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *GCPlayerInfo) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *GCPlayerInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *GCPlayerInfo) GetCardNum() int32 {
	if m != nil && m.CardNum != nil {
		return *m.CardNum
	}
	return 0
}

func (m *GCPlayerInfo) GetCardList() []int32 {
	if m != nil {
		return m.CardList
	}
	return nil
}

func (m *GCPlayerInfo) GetPlayCardList() []int32 {
	if m != nil {
		return m.PlayCardList
	}
	return nil
}

func (m *GCPlayerInfo) GetComposeList() []*Compose {
	if m != nil {
		return m.ComposeList
	}
	return nil
}

func (m *GCPlayerInfo) GetActualState() int32 {
	if m != nil && m.ActualState != nil {
		return *m.ActualState
	}
	return 0
}

func (m *GCPlayerInfo) GetXiaoHus() []int32 {
	if m != nil {
		return m.XiaoHus
	}
	return nil
}

func (m *GCPlayerInfo) GetIfListen() bool {
	if m != nil && m.IfListen != nil {
		return *m.IfListen
	}
	return false
}

func (m *GCPlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GCPlayerInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *GCPlayerInfo) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

// 房间基本信息
type GCRoomInfo struct {
	// 房间id
	RoomId *int64 `protobuf:"varint,1,req,name=roomId" json:"roomId,omitempty"`
	// 房间状态
	State *int32 `protobuf:"varint,2,req,name=state" json:"state,omitempty"`
	// 当前玩家
	CurrentPlayerId *int64 `protobuf:"varint,3,opt,name=currentPlayerId" json:"currentPlayerId,omitempty"`
	// 可能的操作
	CurrentOperationList []*Operation `protobuf:"bytes,4,rep,name=currentOperationList" json:"currentOperationList,omitempty"`
	// 剩余牌数
	Remains *int32 `protobuf:"varint,5,opt,name=remains" json:"remains,omitempty"`
	// 当前牌 可能是两张或一张 正常是一张 杠后才是两张
	CurrentCards []int32 `protobuf:"varint,6,rep,name=currentCards" json:"currentCards,omitempty"`
	// 当前牌类型 0：普通牌 1:踩杠牌 2:杠后牌
	CurrentCardMethod *int32 `protobuf:"varint,7,opt,name=currentCardMethod" json:"currentCardMethod,omitempty"`
	// 当前局数
	CurrentRound *int32 `protobuf:"varint,8,opt,name=currentRound" json:"currentRound,omitempty"`
	// 房间名称
	Name *string `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	// 创建者id
	OwnerId *int64 `protobuf:"varint,10,req,name=ownerId" json:"ownerId,omitempty"`
	// 总局数
	TotalRound *int32 `protobuf:"varint,11,req,name=totalRound" json:"totalRound,omitempty"`
	// 断线重连的剩余时间
	DissolveStartTime *int64 `protobuf:"varint,12,req,name=dissolveStartTime" json:"dissolveStartTime,omitempty"`
	// 同意玩家
	AggreeDissolvePlayers []int64 `protobuf:"varint,13,rep,name=aggreeDissolvePlayers" json:"aggreeDissolvePlayers,omitempty"`
	// 位置
	BankerPos *int32 `protobuf:"varint,14,req,name=bankerPos" json:"bankerPos,omitempty"`
	// 抓鸟
	ZhuaNiao *int32 `protobuf:"varint,15,req,name=zhuaNiao" json:"zhuaNiao,omitempty"`
	// 庄闲
	ZhuangXian *bool `protobuf:"varint,16,req,name=zhuangXian" json:"zhuangXian,omitempty"`
	// 抓鸟算法
	ZhuaNiaoAlg *bool `protobuf:"varint,17,req,name=zhuaNiaoAlg" json:"zhuaNiaoAlg,omitempty"`
	// 是否禁IP
	ForbidIp *int32 `protobuf:"varint,18,req,name=forbidIp" json:"forbidIp,omitempty"`
	// 创建时间
	CreateTime *int64 `protobuf:"varint,19,req,name=createTime" json:"createTime,omitempty"`
	// 开房类型
	OpenRoomType *int32 `protobuf:"varint,20,opt,name=openRoomType" json:"openRoomType,omitempty"`
	// 最后加入时间
	ForbidJoinTime *int64 `protobuf:"varint,21,opt,name=forbidJoinTime" json:"forbidJoinTime,omitempty"`
	// 最后游戏时间
	LastGameTime     *int64 `protobuf:"varint,22,opt,name=lastGameTime" json:"lastGameTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCRoomInfo) Reset()                    { *m = GCRoomInfo{} }
func (m *GCRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*GCRoomInfo) ProtoMessage()               {}
func (*GCRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GCRoomInfo) GetRoomId() int64 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *GCRoomInfo) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *GCRoomInfo) GetCurrentPlayerId() int64 {
	if m != nil && m.CurrentPlayerId != nil {
		return *m.CurrentPlayerId
	}
	return 0
}

func (m *GCRoomInfo) GetCurrentOperationList() []*Operation {
	if m != nil {
		return m.CurrentOperationList
	}
	return nil
}

func (m *GCRoomInfo) GetRemains() int32 {
	if m != nil && m.Remains != nil {
		return *m.Remains
	}
	return 0
}

func (m *GCRoomInfo) GetCurrentCards() []int32 {
	if m != nil {
		return m.CurrentCards
	}
	return nil
}

func (m *GCRoomInfo) GetCurrentCardMethod() int32 {
	if m != nil && m.CurrentCardMethod != nil {
		return *m.CurrentCardMethod
	}
	return 0
}

func (m *GCRoomInfo) GetCurrentRound() int32 {
	if m != nil && m.CurrentRound != nil {
		return *m.CurrentRound
	}
	return 0
}

func (m *GCRoomInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GCRoomInfo) GetOwnerId() int64 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *GCRoomInfo) GetTotalRound() int32 {
	if m != nil && m.TotalRound != nil {
		return *m.TotalRound
	}
	return 0
}

func (m *GCRoomInfo) GetDissolveStartTime() int64 {
	if m != nil && m.DissolveStartTime != nil {
		return *m.DissolveStartTime
	}
	return 0
}

func (m *GCRoomInfo) GetAggreeDissolvePlayers() []int64 {
	if m != nil {
		return m.AggreeDissolvePlayers
	}
	return nil
}

func (m *GCRoomInfo) GetBankerPos() int32 {
	if m != nil && m.BankerPos != nil {
		return *m.BankerPos
	}
	return 0
}

func (m *GCRoomInfo) GetZhuaNiao() int32 {
	if m != nil && m.ZhuaNiao != nil {
		return *m.ZhuaNiao
	}
	return 0
}

func (m *GCRoomInfo) GetZhuangXian() bool {
	if m != nil && m.ZhuangXian != nil {
		return *m.ZhuangXian
	}
	return false
}

func (m *GCRoomInfo) GetZhuaNiaoAlg() bool {
	if m != nil && m.ZhuaNiaoAlg != nil {
		return *m.ZhuaNiaoAlg
	}
	return false
}

func (m *GCRoomInfo) GetForbidIp() int32 {
	if m != nil && m.ForbidIp != nil {
		return *m.ForbidIp
	}
	return 0
}

func (m *GCRoomInfo) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *GCRoomInfo) GetOpenRoomType() int32 {
	if m != nil && m.OpenRoomType != nil {
		return *m.OpenRoomType
	}
	return 0
}

func (m *GCRoomInfo) GetForbidJoinTime() int64 {
	if m != nil && m.ForbidJoinTime != nil {
		return *m.ForbidJoinTime
	}
	return 0
}

func (m *GCRoomInfo) GetLastGameTime() int64 {
	if m != nil && m.LastGameTime != nil {
		return *m.LastGameTime
	}
	return 0
}

// 加入房间
type GCJoinRoom struct {
	// 房间基本信息
	RoomInfo *GCRoomInfo `protobuf:"bytes,1,req,name=roomInfo" json:"roomInfo,omitempty"`
	// 房间牌面信息
	// 玩家列表
	PlayerInfoList   []*GCPlayerInfo `protobuf:"bytes,2,rep,name=playerInfoList" json:"playerInfoList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GCJoinRoom) Reset()                    { *m = GCJoinRoom{} }
func (m *GCJoinRoom) String() string            { return proto.CompactTextString(m) }
func (*GCJoinRoom) ProtoMessage()               {}
func (*GCJoinRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GCJoinRoom) GetRoomInfo() *GCRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *GCJoinRoom) GetPlayerInfoList() []*GCPlayerInfo {
	if m != nil {
		return m.PlayerInfoList
	}
	return nil
}

// 碰吃杠后的牌
type Compose struct {
	// 吃碰胡类型
	ComposeType *int32 `protobuf:"varint,1,req,name=composeType" json:"composeType,omitempty"`
	// 牌
	Cards            []int32 `protobuf:"varint,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Compose) Reset()                    { *m = Compose{} }
func (m *Compose) String() string            { return proto.CompactTextString(m) }
func (*Compose) ProtoMessage()               {}
func (*Compose) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Compose) GetComposeType() int32 {
	if m != nil && m.ComposeType != nil {
		return *m.ComposeType
	}
	return 0
}

func (m *Compose) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 广播玩家加入
type GCJoinRoomBroadcast struct {
	GcPlayerInfo     *GCPlayerInfo `protobuf:"bytes,1,req,name=gcPlayerInfo" json:"gcPlayerInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GCJoinRoomBroadcast) Reset()                    { *m = GCJoinRoomBroadcast{} }
func (m *GCJoinRoomBroadcast) String() string            { return proto.CompactTextString(m) }
func (*GCJoinRoomBroadcast) ProtoMessage()               {}
func (*GCJoinRoomBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GCJoinRoomBroadcast) GetGcPlayerInfo() *GCPlayerInfo {
	if m != nil {
		return m.GcPlayerInfo
	}
	return nil
}

// 选定庄家
type GCSelectBankerBroadcast struct {
	// 庄家位置
	BankerPos        *int32 `protobuf:"varint,1,req,name=bankerPos" json:"bankerPos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCSelectBankerBroadcast) Reset()                    { *m = GCSelectBankerBroadcast{} }
func (m *GCSelectBankerBroadcast) String() string            { return proto.CompactTextString(m) }
func (*GCSelectBankerBroadcast) ProtoMessage()               {}
func (*GCSelectBankerBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GCSelectBankerBroadcast) GetBankerPos() int32 {
	if m != nil && m.BankerPos != nil {
		return *m.BankerPos
	}
	return 0
}

// 发牌
type GCDealCards struct {
	Cards            []int32 `protobuf:"varint,1,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GCDealCards) Reset()                    { *m = GCDealCards{} }
func (m *GCDealCards) String() string            { return proto.CompactTextString(m) }
func (*GCDealCards) ProtoMessage()               {}
func (*GCDealCards) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GCDealCards) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 小胡
type XiaoHu struct {
	XiaoHuType       *int32  `protobuf:"varint,1,req,name=xiaoHuType" json:"xiaoHuType,omitempty"`
	Cards            []int32 `protobuf:"varint,2,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XiaoHu) Reset()                    { *m = XiaoHu{} }
func (m *XiaoHu) String() string            { return proto.CompactTextString(m) }
func (*XiaoHu) ProtoMessage()               {}
func (*XiaoHu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *XiaoHu) GetXiaoHuType() int32 {
	if m != nil && m.XiaoHuType != nil {
		return *m.XiaoHuType
	}
	return 0
}

func (m *XiaoHu) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 玩家小胡
type XiaohuPlayer struct {
	PlayerId         *int64    `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XiaoHuList       []*XiaoHu `protobuf:"bytes,2,rep,name=xiaoHuList" json:"xiaoHuList,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *XiaohuPlayer) Reset()                    { *m = XiaohuPlayer{} }
func (m *XiaohuPlayer) String() string            { return proto.CompactTextString(m) }
func (*XiaohuPlayer) ProtoMessage()               {}
func (*XiaohuPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *XiaohuPlayer) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *XiaohuPlayer) GetXiaoHuList() []*XiaoHu {
	if m != nil {
		return m.XiaoHuList
	}
	return nil
}

// 小胡广播
type GCXiaoHuBroadcast struct {
	XiaohuPlayerList []*XiaohuPlayer `protobuf:"bytes,1,rep,name=xiaohuPlayerList" json:"xiaohuPlayerList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GCXiaoHuBroadcast) Reset()                    { *m = GCXiaoHuBroadcast{} }
func (m *GCXiaoHuBroadcast) String() string            { return proto.CompactTextString(m) }
func (*GCXiaoHuBroadcast) ProtoMessage()               {}
func (*GCXiaoHuBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GCXiaoHuBroadcast) GetXiaohuPlayerList() []*XiaohuPlayer {
	if m != nil {
		return m.XiaohuPlayerList
	}
	return nil
}

// 打牌
type CGPlayerPlayCard struct {
	Card             *int32 `protobuf:"varint,1,req,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGPlayerPlayCard) Reset()                    { *m = CGPlayerPlayCard{} }
func (m *CGPlayerPlayCard) String() string            { return proto.CompactTextString(m) }
func (*CGPlayerPlayCard) ProtoMessage()               {}
func (*CGPlayerPlayCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CGPlayerPlayCard) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

// 打牌
type GCPlayerPlayCard struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 打的牌
	Card             *int32 `protobuf:"varint,2,req,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerPlayCard) Reset()                    { *m = GCPlayerPlayCard{} }
func (m *GCPlayerPlayCard) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerPlayCard) ProtoMessage()               {}
func (*GCPlayerPlayCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GCPlayerPlayCard) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerPlayCard) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

// 摸牌
type GCPlayerMoCard struct {
	Card             *int32 `protobuf:"varint,1,req,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerMoCard) Reset()                    { *m = GCPlayerMoCard{} }
func (m *GCPlayerMoCard) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerMoCard) ProtoMessage()               {}
func (*GCPlayerMoCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GCPlayerMoCard) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

// 摸牌广播
type GCPlayerMoCardBroadcast struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerMoCardBroadcast) Reset()                    { *m = GCPlayerMoCardBroadcast{} }
func (m *GCPlayerMoCardBroadcast) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerMoCardBroadcast) ProtoMessage()               {}
func (*GCPlayerMoCardBroadcast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GCPlayerMoCardBroadcast) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 玩家可以操作的行为
type Operation struct {
	// 玩家可以操作类型
	OperationType *int32 `protobuf:"varint,1,req,name=operationType" json:"operationType,omitempty"`
	// 需要的牌
	CardList []int32 `protobuf:"varint,2,rep,name=cardList" json:"cardList,omitempty"`
	// 目标牌
	TargetCard *int32 `protobuf:"varint,3,req,name=targetCard" json:"targetCard,omitempty"`
	// 目标牌索引
	TargetIndex      *int32 `protobuf:"varint,4,req,name=targetIndex" json:"targetIndex,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Operation) GetOperationType() int32 {
	if m != nil && m.OperationType != nil {
		return *m.OperationType
	}
	return 0
}

func (m *Operation) GetCardList() []int32 {
	if m != nil {
		return m.CardList
	}
	return nil
}

func (m *Operation) GetTargetCard() int32 {
	if m != nil && m.TargetCard != nil {
		return *m.TargetCard
	}
	return 0
}

func (m *Operation) GetTargetIndex() int32 {
	if m != nil && m.TargetIndex != nil {
		return *m.TargetIndex
	}
	return 0
}

// 玩家可以操作的行为发送
type GCPlayerOperations struct {
	OperationList    []*Operation `protobuf:"bytes,1,rep,name=operationList" json:"operationList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GCPlayerOperations) Reset()                    { *m = GCPlayerOperations{} }
func (m *GCPlayerOperations) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerOperations) ProtoMessage()               {}
func (*GCPlayerOperations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GCPlayerOperations) GetOperationList() []*Operation {
	if m != nil {
		return m.OperationList
	}
	return nil
}

// 吃
type GCPlayerChi struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 吃的牌
	Card *int32 `protobuf:"varint,2,req,name=card" json:"card,omitempty"`
	// 吃的列表
	CardList         []int32 `protobuf:"varint,3,rep,name=cardList" json:"cardList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GCPlayerChi) Reset()                    { *m = GCPlayerChi{} }
func (m *GCPlayerChi) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerChi) ProtoMessage()               {}
func (*GCPlayerChi) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *GCPlayerChi) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerChi) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *GCPlayerChi) GetCardList() []int32 {
	if m != nil {
		return m.CardList
	}
	return nil
}

// 碰
type GCPlayerPeng struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 碰的牌
	Card             *int32 `protobuf:"varint,2,req,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerPeng) Reset()                    { *m = GCPlayerPeng{} }
func (m *GCPlayerPeng) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerPeng) ProtoMessage()               {}
func (*GCPlayerPeng) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GCPlayerPeng) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerPeng) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

// 杠
type GCPlayerGang struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 杠的牌
	Card *int32 `protobuf:"varint,2,req,name=card" json:"card,omitempty"`
	// 杠的类型
	GangType         *int32 `protobuf:"varint,3,req,name=gangType" json:"gangType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerGang) Reset()                    { *m = GCPlayerGang{} }
func (m *GCPlayerGang) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerGang) ProtoMessage()               {}
func (*GCPlayerGang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GCPlayerGang) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerGang) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *GCPlayerGang) GetGangType() int32 {
	if m != nil && m.GangType != nil {
		return *m.GangType
	}
	return 0
}

// 补
type GCPlayerBu struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 补的牌
	Card *int32 `protobuf:"varint,2,req,name=card" json:"card,omitempty"`
	// 补的类型
	BuType           *int32 `protobuf:"varint,3,req,name=buType" json:"buType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerBu) Reset()                    { *m = GCPlayerBu{} }
func (m *GCPlayerBu) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerBu) ProtoMessage()               {}
func (*GCPlayerBu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GCPlayerBu) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerBu) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *GCPlayerBu) GetBuType() int32 {
	if m != nil && m.BuType != nil {
		return *m.BuType
	}
	return 0
}

// 单局结算分数
type RoundSettlePlayerInfo struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 吃碰杠的牌
	ComposeList []*Compose `protobuf:"bytes,2,rep,name=composeList" json:"composeList,omitempty"`
	// 手上的牌
	CardList []int32 `protobuf:"varint,3,rep,name=cardList" json:"cardList,omitempty"`
	// 分数输赢
	Score *int64 `protobuf:"varint,4,req,name=score" json:"score,omitempty"`
	// 小胡
	XiaoHuList       []int32 `protobuf:"varint,5,rep,name=xiaoHuList" json:"xiaoHuList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoundSettlePlayerInfo) Reset()                    { *m = RoundSettlePlayerInfo{} }
func (m *RoundSettlePlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*RoundSettlePlayerInfo) ProtoMessage()               {}
func (*RoundSettlePlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RoundSettlePlayerInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *RoundSettlePlayerInfo) GetComposeList() []*Compose {
	if m != nil {
		return m.ComposeList
	}
	return nil
}

func (m *RoundSettlePlayerInfo) GetCardList() []int32 {
	if m != nil {
		return m.CardList
	}
	return nil
}

func (m *RoundSettlePlayerInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *RoundSettlePlayerInfo) GetXiaoHuList() []int32 {
	if m != nil {
		return m.XiaoHuList
	}
	return nil
}

// 胡牌
type Hu struct {
	// 胡牌类型
	HuType *int32 `protobuf:"varint,1,req,name=huType" json:"huType,omitempty"`
	// 玩家id
	PlayerId         *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Hu) Reset()                    { *m = Hu{} }
func (m *Hu) String() string            { return proto.CompactTextString(m) }
func (*Hu) ProtoMessage()               {}
func (*Hu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Hu) GetHuType() int32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *Hu) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 胡
type GCPlayerHu struct {
	HuList           []*Hu                    `protobuf:"bytes,1,rep,name=huList" json:"huList,omitempty"`
	SettlePlayerList []*RoundSettlePlayerInfo `protobuf:"bytes,2,rep,name=settlePlayerList" json:"settlePlayerList,omitempty"`
	Card             *int32                   `protobuf:"varint,3,req,name=card" json:"card,omitempty"`
	// 鸟牌
	NiaoPais []int32 `protobuf:"varint,4,rep,name=niaoPais" json:"niaoPais,omitempty"`
	// 中鸟玩家
	NiaoPaiPlayers []int64 `protobuf:"varint,5,rep,name=niaoPaiPlayers" json:"niaoPaiPlayers,omitempty"`
	// 点炮玩家id
	DianPaoPlayerId  *int64 `protobuf:"varint,6,req,name=dianPaoPlayerId" json:"dianPaoPlayerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerHu) Reset()                    { *m = GCPlayerHu{} }
func (m *GCPlayerHu) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerHu) ProtoMessage()               {}
func (*GCPlayerHu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *GCPlayerHu) GetHuList() []*Hu {
	if m != nil {
		return m.HuList
	}
	return nil
}

func (m *GCPlayerHu) GetSettlePlayerList() []*RoundSettlePlayerInfo {
	if m != nil {
		return m.SettlePlayerList
	}
	return nil
}

func (m *GCPlayerHu) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *GCPlayerHu) GetNiaoPais() []int32 {
	if m != nil {
		return m.NiaoPais
	}
	return nil
}

func (m *GCPlayerHu) GetNiaoPaiPlayers() []int64 {
	if m != nil {
		return m.NiaoPaiPlayers
	}
	return nil
}

func (m *GCPlayerHu) GetDianPaoPlayerId() int64 {
	if m != nil && m.DianPaoPlayerId != nil {
		return *m.DianPaoPlayerId
	}
	return 0
}

// 等候玩家出牌
type GCWaitPlayerPlayCard struct {
	// 玩家id
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCWaitPlayerPlayCard) Reset()                    { *m = GCWaitPlayerPlayCard{} }
func (m *GCWaitPlayerPlayCard) String() string            { return proto.CompactTextString(m) }
func (*GCWaitPlayerPlayCard) ProtoMessage()               {}
func (*GCWaitPlayerPlayCard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GCWaitPlayerPlayCard) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 玩家操作
type CGPlayerOperate struct {
	Operation        *Operation `protobuf:"bytes,1,req,name=operation" json:"operation,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CGPlayerOperate) Reset()                    { *m = CGPlayerOperate{} }
func (m *CGPlayerOperate) String() string            { return proto.CompactTextString(m) }
func (*CGPlayerOperate) ProtoMessage()               {}
func (*CGPlayerOperate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CGPlayerOperate) GetOperation() *Operation {
	if m != nil {
		return m.Operation
	}
	return nil
}

// 清理桌面
type GCClear struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCClear) Reset()                    { *m = GCClear{} }
func (m *GCClear) String() string            { return proto.CompactTextString(m) }
func (*GCClear) ProtoMessage()               {}
func (*GCClear) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

// 玩家重新连接
type GCReconnectPlayer struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCReconnectPlayer) Reset()                    { *m = GCReconnectPlayer{} }
func (m *GCReconnectPlayer) String() string            { return proto.CompactTextString(m) }
func (*GCReconnectPlayer) ProtoMessage()               {}
func (*GCReconnectPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *GCReconnectPlayer) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 玩家断开连接
type GCDisconnectPlayer struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCDisconnectPlayer) Reset()                    { *m = GCDisconnectPlayer{} }
func (m *GCDisconnectPlayer) String() string            { return proto.CompactTextString(m) }
func (*GCDisconnectPlayer) ProtoMessage()               {}
func (*GCDisconnectPlayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *GCDisconnectPlayer) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 杠后摸的牌
type GCPlayerGangMo struct {
	// 玩家id
	PlayerId *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	// 杠后摸的牌
	Card             []int32 `protobuf:"varint,2,rep,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GCPlayerGangMo) Reset()                    { *m = GCPlayerGangMo{} }
func (m *GCPlayerGangMo) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerGangMo) ProtoMessage()               {}
func (*GCPlayerGangMo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *GCPlayerGangMo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCPlayerGangMo) GetCard() []int32 {
	if m != nil {
		return m.Card
	}
	return nil
}

// 离开房间
type CGPlayerLeave struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGPlayerLeave) Reset()                    { *m = CGPlayerLeave{} }
func (m *CGPlayerLeave) String() string            { return proto.CompactTextString(m) }
func (*CGPlayerLeave) ProtoMessage()               {}
func (*CGPlayerLeave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

// 离开房间
type GCPlayerLeave struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerLeave) Reset()                    { *m = GCPlayerLeave{} }
func (m *GCPlayerLeave) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerLeave) ProtoMessage()               {}
func (*GCPlayerLeave) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *GCPlayerLeave) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 准备开始
type CGPlayerStart struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGPlayerStart) Reset()                    { *m = CGPlayerStart{} }
func (m *CGPlayerStart) String() string            { return proto.CompactTextString(m) }
func (*CGPlayerStart) ProtoMessage()               {}
func (*CGPlayerStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

// 准备开始
type GCPlayerStart struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerStart) Reset()                    { *m = GCPlayerStart{} }
func (m *GCPlayerStart) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerStart) ProtoMessage()               {}
func (*GCPlayerStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *GCPlayerStart) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 申请解散房间
type CGPlayerDissolve struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGPlayerDissolve) Reset()                    { *m = CGPlayerDissolve{} }
func (m *CGPlayerDissolve) String() string            { return proto.CompactTextString(m) }
func (*CGPlayerDissolve) ProtoMessage()               {}
func (*CGPlayerDissolve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CGPlayerDissolve) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 申请解散房间
type GCPlayerDissolve struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerDissolve) Reset()                    { *m = GCPlayerDissolve{} }
func (m *GCPlayerDissolve) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerDissolve) ProtoMessage()               {}
func (*GCPlayerDissolve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GCPlayerDissolve) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 同意或拒绝
type CGPlayerDissolveAgree struct {
	Agree            *bool  `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGPlayerDissolveAgree) Reset()                    { *m = CGPlayerDissolveAgree{} }
func (m *CGPlayerDissolveAgree) String() string            { return proto.CompactTextString(m) }
func (*CGPlayerDissolveAgree) ProtoMessage()               {}
func (*CGPlayerDissolveAgree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CGPlayerDissolveAgree) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

// 同意或拒绝
type GCPlayerDissolveAgree struct {
	Agree            *bool  `protobuf:"varint,1,req,name=agree" json:"agree,omitempty"`
	PlayerId         *int64 `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCPlayerDissolveAgree) Reset()                    { *m = GCPlayerDissolveAgree{} }
func (m *GCPlayerDissolveAgree) String() string            { return proto.CompactTextString(m) }
func (*GCPlayerDissolveAgree) ProtoMessage()               {}
func (*GCPlayerDissolveAgree) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *GCPlayerDissolveAgree) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

func (m *GCPlayerDissolveAgree) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 流局
type GCLiuJu struct {
	SettlePlayerList []*RoundSettlePlayerInfo `protobuf:"bytes,1,rep,name=settlePlayerList" json:"settlePlayerList,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GCLiuJu) Reset()                    { *m = GCLiuJu{} }
func (m *GCLiuJu) String() string            { return proto.CompactTextString(m) }
func (*GCLiuJu) ProtoMessage()               {}
func (*GCLiuJu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *GCLiuJu) GetSettlePlayerList() []*RoundSettlePlayerInfo {
	if m != nil {
		return m.SettlePlayerList
	}
	return nil
}

// 结算
type SettleInfo struct {
	SettleType       *int32 `protobuf:"varint,1,req,name=settleType" json:"settleType,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SettleInfo) Reset()                    { *m = SettleInfo{} }
func (m *SettleInfo) String() string            { return proto.CompactTextString(m) }
func (*SettleInfo) ProtoMessage()               {}
func (*SettleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *SettleInfo) GetSettleType() int32 {
	if m != nil && m.SettleType != nil {
		return *m.SettleType
	}
	return 0
}

func (m *SettleInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

// 总结算玩家数据
type TotalSettlePlayerInfo struct {
	SettleInfoList   []*SettleInfo `protobuf:"bytes,1,rep,name=settleInfoList" json:"settleInfoList,omitempty"`
	Totalscore       *int32        `protobuf:"varint,2,req,name=totalscore" json:"totalscore,omitempty"`
	PlayerId         *int64        `protobuf:"varint,3,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *TotalSettlePlayerInfo) Reset()                    { *m = TotalSettlePlayerInfo{} }
func (m *TotalSettlePlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*TotalSettlePlayerInfo) ProtoMessage()               {}
func (*TotalSettlePlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *TotalSettlePlayerInfo) GetSettleInfoList() []*SettleInfo {
	if m != nil {
		return m.SettleInfoList
	}
	return nil
}

func (m *TotalSettlePlayerInfo) GetTotalscore() int32 {
	if m != nil && m.Totalscore != nil {
		return *m.Totalscore
	}
	return 0
}

func (m *TotalSettlePlayerInfo) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 总结算
type GCTotalSettle struct {
	TotalSettlePlayerInfoList []*TotalSettlePlayerInfo `protobuf:"bytes,1,rep,name=totalSettlePlayerInfoList" json:"totalSettlePlayerInfoList,omitempty"`
	XXX_unrecognized          []byte                   `json:"-"`
}

func (m *GCTotalSettle) Reset()                    { *m = GCTotalSettle{} }
func (m *GCTotalSettle) String() string            { return proto.CompactTextString(m) }
func (*GCTotalSettle) ProtoMessage()               {}
func (*GCTotalSettle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *GCTotalSettle) GetTotalSettlePlayerInfoList() []*TotalSettlePlayerInfo {
	if m != nil {
		return m.TotalSettlePlayerInfoList
	}
	return nil
}

// 小胡列表
type GCXiaoHuList struct {
	XiaoHus          []int32 `protobuf:"varint,1,rep,name=xiaoHus" json:"xiaoHus,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GCXiaoHuList) Reset()                    { *m = GCXiaoHuList{} }
func (m *GCXiaoHuList) String() string            { return proto.CompactTextString(m) }
func (*GCXiaoHuList) ProtoMessage()               {}
func (*GCXiaoHuList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *GCXiaoHuList) GetXiaoHus() []int32 {
	if m != nil {
		return m.XiaoHus
	}
	return nil
}

// 小胡
type CGXiaoHu struct {
	XiaoHu           *int32 `protobuf:"varint,1,req,name=xiaoHu" json:"xiaoHu,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGXiaoHu) Reset()                    { *m = CGXiaoHu{} }
func (m *CGXiaoHu) String() string            { return proto.CompactTextString(m) }
func (*CGXiaoHu) ProtoMessage()               {}
func (*CGXiaoHu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CGXiaoHu) GetXiaoHu() int32 {
	if m != nil && m.XiaoHu != nil {
		return *m.XiaoHu
	}
	return 0
}

// 小胡
type GCXiaoHu struct {
	PlayerId         *int64  `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XiaoHu           *XiaoHu `protobuf:"bytes,2,req,name=xiaoHu" json:"xiaoHu,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GCXiaoHu) Reset()                    { *m = GCXiaoHu{} }
func (m *GCXiaoHu) String() string            { return proto.CompactTextString(m) }
func (*GCXiaoHu) ProtoMessage()               {}
func (*GCXiaoHu) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *GCXiaoHu) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCXiaoHu) GetXiaoHu() *XiaoHu {
	if m != nil {
		return m.XiaoHu
	}
	return nil
}

// 小胡过
type CGXiaoHuPass struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGXiaoHuPass) Reset()                    { *m = CGXiaoHuPass{} }
func (m *CGXiaoHuPass) String() string            { return proto.CompactTextString(m) }
func (*CGXiaoHuPass) ProtoMessage()               {}
func (*CGXiaoHuPass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *CGXiaoHuPass) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 小胡过
type GCXiaoHuPass struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCXiaoHuPass) Reset()                    { *m = GCXiaoHuPass{} }
func (m *GCXiaoHuPass) String() string            { return proto.CompactTextString(m) }
func (*GCXiaoHuPass) ProtoMessage()               {}
func (*GCXiaoHuPass) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *GCXiaoHuPass) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 海底牌轮流
type GCHaiDiAsk struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCHaiDiAsk) Reset()                    { *m = GCHaiDiAsk{} }
func (m *GCHaiDiAsk) String() string            { return proto.CompactTextString(m) }
func (*GCHaiDiAsk) ProtoMessage()               {}
func (*GCHaiDiAsk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *GCHaiDiAsk) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

// 海底牌轮流
type CGHaiDiAnswer struct {
	Flag             *bool  `protobuf:"varint,1,req,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGHaiDiAnswer) Reset()                    { *m = CGHaiDiAnswer{} }
func (m *CGHaiDiAnswer) String() string            { return proto.CompactTextString(m) }
func (*CGHaiDiAnswer) ProtoMessage()               {}
func (*CGHaiDiAnswer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CGHaiDiAnswer) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

// 海底牌广播
type GCHaiDiAnswer struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Flag             *bool  `protobuf:"varint,2,req,name=flag" json:"flag,omitempty"`
	Card             *int32 `protobuf:"varint,3,opt,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCHaiDiAnswer) Reset()                    { *m = GCHaiDiAnswer{} }
func (m *GCHaiDiAnswer) String() string            { return proto.CompactTextString(m) }
func (*GCHaiDiAnswer) ProtoMessage()               {}
func (*GCHaiDiAnswer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *GCHaiDiAnswer) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCHaiDiAnswer) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

func (m *GCHaiDiAnswer) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

// 自主离开
type CGLeaveTime struct {
	Flag             *bool  `protobuf:"varint,1,req,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGLeaveTime) Reset()                    { *m = CGLeaveTime{} }
func (m *CGLeaveTime) String() string            { return proto.CompactTextString(m) }
func (*CGLeaveTime) ProtoMessage()               {}
func (*CGLeaveTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *CGLeaveTime) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

// 自主离开广播
type GCLeaveTime struct {
	PlayerId         *int64 `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	Flag             *bool  `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCLeaveTime) Reset()                    { *m = GCLeaveTime{} }
func (m *GCLeaveTime) String() string            { return proto.CompactTextString(m) }
func (*GCLeaveTime) ProtoMessage()               {}
func (*GCLeaveTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *GCLeaveTime) GetPlayerId() int64 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *GCLeaveTime) GetFlag() bool {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return false
}

// 聊天
type CGChat struct {
	Typ              *int32 `protobuf:"varint,1,req,name=typ" json:"typ,omitempty"`
	Content          []byte `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGChat) Reset()                    { *m = CGChat{} }
func (m *CGChat) String() string            { return proto.CompactTextString(m) }
func (*CGChat) ProtoMessage()               {}
func (*CGChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *CGChat) GetTyp() int32 {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return 0
}

func (m *CGChat) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type GCChat struct {
	Typ              *int32 `protobuf:"varint,1,req,name=typ" json:"typ,omitempty"`
	Content          []byte `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	Sender           *int64 `protobuf:"varint,3,req,name=sender" json:"sender,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GCChat) Reset()                    { *m = GCChat{} }
func (m *GCChat) String() string            { return proto.CompactTextString(m) }
func (*GCChat) ProtoMessage()               {}
func (*GCChat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *GCChat) GetTyp() int32 {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return 0
}

func (m *GCChat) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GCChat) GetSender() int64 {
	if m != nil && m.Sender != nil {
		return *m.Sender
	}
	return 0
}

var E_CgJoinRoom = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGJoinRoom)(nil),
	Field:         2001,
	Name:          "changsha.cgJoinRoom",
	Tag:           "bytes,2001,opt,name=cgJoinRoom",
	Filename:      "changsha.proto",
}

var E_GcJoinRoom = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCJoinRoom)(nil),
	Field:         2010,
	Name:          "changsha.gcJoinRoom",
	Tag:           "bytes,2010,opt,name=gcJoinRoom",
	Filename:      "changsha.proto",
}

var E_GcJoinRoomBroadcast = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCJoinRoomBroadcast)(nil),
	Field:         2020,
	Name:          "changsha.gcJoinRoomBroadcast",
	Tag:           "bytes,2020,opt,name=gcJoinRoomBroadcast",
	Filename:      "changsha.proto",
}

var E_GcSelectBankerBroadcast = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCSelectBankerBroadcast)(nil),
	Field:         2030,
	Name:          "changsha.gcSelectBankerBroadcast",
	Tag:           "bytes,2030,opt,name=gcSelectBankerBroadcast",
	Filename:      "changsha.proto",
}

var E_GcDealCards = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCDealCards)(nil),
	Field:         2040,
	Name:          "changsha.gcDealCards",
	Tag:           "bytes,2040,opt,name=gcDealCards",
	Filename:      "changsha.proto",
}

var E_GcXiaoHuBroadcast = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCXiaoHuBroadcast)(nil),
	Field:         2050,
	Name:          "changsha.gcXiaoHuBroadcast",
	Tag:           "bytes,2050,opt,name=gcXiaoHuBroadcast",
	Filename:      "changsha.proto",
}

var E_CgPlayerPlayCard = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGPlayerPlayCard)(nil),
	Field:         2060,
	Name:          "changsha.cgPlayerPlayCard",
	Tag:           "bytes,2060,opt,name=cgPlayerPlayCard",
	Filename:      "changsha.proto",
}

var E_GcPlayerPlayCard = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerPlayCard)(nil),
	Field:         2070,
	Name:          "changsha.gcPlayerPlayCard",
	Tag:           "bytes,2070,opt,name=gcPlayerPlayCard",
	Filename:      "changsha.proto",
}

var E_GcPlayerMoCard = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerMoCard)(nil),
	Field:         2080,
	Name:          "changsha.gcPlayerMoCard",
	Tag:           "bytes,2080,opt,name=gcPlayerMoCard",
	Filename:      "changsha.proto",
}

var E_GcPlayerMoCardBroadcast = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerMoCardBroadcast)(nil),
	Field:         2090,
	Name:          "changsha.gcPlayerMoCardBroadcast",
	Tag:           "bytes,2090,opt,name=gcPlayerMoCardBroadcast",
	Filename:      "changsha.proto",
}

var E_GcPlayerOperations = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerOperations)(nil),
	Field:         2100,
	Name:          "changsha.gcPlayerOperations",
	Tag:           "bytes,2100,opt,name=gcPlayerOperations",
	Filename:      "changsha.proto",
}

var E_GcPlayerChi = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerChi)(nil),
	Field:         2110,
	Name:          "changsha.gcPlayerChi",
	Tag:           "bytes,2110,opt,name=gcPlayerChi",
	Filename:      "changsha.proto",
}

var E_GcPlayerPeng = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerPeng)(nil),
	Field:         2120,
	Name:          "changsha.gcPlayerPeng",
	Tag:           "bytes,2120,opt,name=gcPlayerPeng",
	Filename:      "changsha.proto",
}

var E_GcPlayerGang = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerGang)(nil),
	Field:         2130,
	Name:          "changsha.gcPlayerGang",
	Tag:           "bytes,2130,opt,name=gcPlayerGang",
	Filename:      "changsha.proto",
}

var E_GcPlayerBu = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerBu)(nil),
	Field:         2140,
	Name:          "changsha.gcPlayerBu",
	Tag:           "bytes,2140,opt,name=gcPlayerBu",
	Filename:      "changsha.proto",
}

var E_GcPlayerHu = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerHu)(nil),
	Field:         2150,
	Name:          "changsha.gcPlayerHu",
	Tag:           "bytes,2150,opt,name=gcPlayerHu",
	Filename:      "changsha.proto",
}

var E_GcWaitPlayerPlayCard = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCWaitPlayerPlayCard)(nil),
	Field:         2160,
	Name:          "changsha.gcWaitPlayerPlayCard",
	Tag:           "bytes,2160,opt,name=gcWaitPlayerPlayCard",
	Filename:      "changsha.proto",
}

var E_CgPlayerOpreate = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGPlayerOperate)(nil),
	Field:         2170,
	Name:          "changsha.cgPlayerOpreate",
	Tag:           "bytes,2170,opt,name=cgPlayerOpreate",
	Filename:      "changsha.proto",
}

var E_GcClear = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCClear)(nil),
	Field:         2180,
	Name:          "changsha.gcClear",
	Tag:           "bytes,2180,opt,name=gcClear",
	Filename:      "changsha.proto",
}

var E_GcReconnectPlayer = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCReconnectPlayer)(nil),
	Field:         2190,
	Name:          "changsha.gcReconnectPlayer",
	Tag:           "bytes,2190,opt,name=gcReconnectPlayer",
	Filename:      "changsha.proto",
}

var E_GcDisconnectPlayer = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCDisconnectPlayer)(nil),
	Field:         2200,
	Name:          "changsha.gcDisconnectPlayer",
	Tag:           "bytes,2200,opt,name=gcDisconnectPlayer",
	Filename:      "changsha.proto",
}

var E_GcPlayerGangMo = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerGangMo)(nil),
	Field:         2210,
	Name:          "changsha.gcPlayerGangMo",
	Tag:           "bytes,2210,opt,name=gcPlayerGangMo",
	Filename:      "changsha.proto",
}

var E_CgPlayerLeave = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGPlayerLeave)(nil),
	Field:         2220,
	Name:          "changsha.cgPlayerLeave",
	Tag:           "bytes,2220,opt,name=cgPlayerLeave",
	Filename:      "changsha.proto",
}

var E_GcPlayerLeave = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerLeave)(nil),
	Field:         2230,
	Name:          "changsha.gcPlayerLeave",
	Tag:           "bytes,2230,opt,name=gcPlayerLeave",
	Filename:      "changsha.proto",
}

var E_CgPlayerStart = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGPlayerStart)(nil),
	Field:         2240,
	Name:          "changsha.cgPlayerStart",
	Tag:           "bytes,2240,opt,name=cgPlayerStart",
	Filename:      "changsha.proto",
}

var E_GcPlayerStart = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerStart)(nil),
	Field:         2250,
	Name:          "changsha.gcPlayerStart",
	Tag:           "bytes,2250,opt,name=gcPlayerStart",
	Filename:      "changsha.proto",
}

var E_CgPlayerDissolve = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGPlayerDissolve)(nil),
	Field:         2260,
	Name:          "changsha.cgPlayerDissolve",
	Tag:           "bytes,2260,opt,name=cgPlayerDissolve",
	Filename:      "changsha.proto",
}

var E_GcPlayerDissolve = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerDissolve)(nil),
	Field:         2270,
	Name:          "changsha.gcPlayerDissolve",
	Tag:           "bytes,2270,opt,name=gcPlayerDissolve",
	Filename:      "changsha.proto",
}

var E_CgPlayerDissolveAgree = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGPlayerDissolveAgree)(nil),
	Field:         2280,
	Name:          "changsha.cgPlayerDissolveAgree",
	Tag:           "bytes,2280,opt,name=cgPlayerDissolveAgree",
	Filename:      "changsha.proto",
}

var E_GcPlayerDissolveAgree = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCPlayerDissolveAgree)(nil),
	Field:         2290,
	Name:          "changsha.gcPlayerDissolveAgree",
	Tag:           "bytes,2290,opt,name=gcPlayerDissolveAgree",
	Filename:      "changsha.proto",
}

var E_GcLiuJu = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCLiuJu)(nil),
	Field:         2300,
	Name:          "changsha.gcLiuJu",
	Tag:           "bytes,2300,opt,name=gcLiuJu",
	Filename:      "changsha.proto",
}

var E_GcTotalSettle = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCTotalSettle)(nil),
	Field:         2310,
	Name:          "changsha.gcTotalSettle",
	Tag:           "bytes,2310,opt,name=gcTotalSettle",
	Filename:      "changsha.proto",
}

var E_GcXiaoHuList = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCXiaoHuList)(nil),
	Field:         2320,
	Name:          "changsha.gcXiaoHuList",
	Tag:           "bytes,2320,opt,name=gcXiaoHuList",
	Filename:      "changsha.proto",
}

var E_CgXiaoHu = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGXiaoHu)(nil),
	Field:         2330,
	Name:          "changsha.cgXiaoHu",
	Tag:           "bytes,2330,opt,name=cgXiaoHu",
	Filename:      "changsha.proto",
}

var E_GcXiaohu = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCXiaoHu)(nil),
	Field:         2340,
	Name:          "changsha.gcXiaohu",
	Tag:           "bytes,2340,opt,name=gcXiaohu",
	Filename:      "changsha.proto",
}

var E_CgXiaoHuPass = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGXiaoHuPass)(nil),
	Field:         2350,
	Name:          "changsha.cgXiaoHuPass",
	Tag:           "bytes,2350,opt,name=cgXiaoHuPass",
	Filename:      "changsha.proto",
}

var E_GcXiaoHuPass = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCXiaoHuPass)(nil),
	Field:         2360,
	Name:          "changsha.gcXiaoHuPass",
	Tag:           "bytes,2360,opt,name=gcXiaoHuPass",
	Filename:      "changsha.proto",
}

var E_GcHaiDiAsk = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCHaiDiAsk)(nil),
	Field:         2380,
	Name:          "changsha.gcHaiDiAsk",
	Tag:           "bytes,2380,opt,name=gcHaiDiAsk",
	Filename:      "changsha.proto",
}

var E_CgHaiDiAnswer = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGHaiDiAnswer)(nil),
	Field:         2390,
	Name:          "changsha.cgHaiDiAnswer",
	Tag:           "bytes,2390,opt,name=cgHaiDiAnswer",
	Filename:      "changsha.proto",
}

var E_GcHaiDiAnswer = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCHaiDiAnswer)(nil),
	Field:         2400,
	Name:          "changsha.gcHaiDiAnswer",
	Tag:           "bytes,2400,opt,name=gcHaiDiAnswer",
	Filename:      "changsha.proto",
}

var E_CgLeaveTime = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGLeaveTime)(nil),
	Field:         2410,
	Name:          "changsha.cgLeaveTime",
	Tag:           "bytes,2410,opt,name=cgLeaveTime",
	Filename:      "changsha.proto",
}

var E_GcLeaveTime = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCLeaveTime)(nil),
	Field:         2420,
	Name:          "changsha.gcLeaveTime",
	Tag:           "bytes,2420,opt,name=gcLeaveTime",
	Filename:      "changsha.proto",
}

var E_CgChat = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*CGChat)(nil),
	Field:         3001,
	Name:          "changsha.cgChat",
	Tag:           "bytes,3001,opt,name=cgChat",
	Filename:      "changsha.proto",
}

var E_GcChat = &proto.ExtensionDesc{
	ExtendedType:  (*pb.Message)(nil),
	ExtensionType: (*GCChat)(nil),
	Field:         3002,
	Name:          "changsha.gcChat",
	Tag:           "bytes,3002,opt,name=gcChat",
	Filename:      "changsha.proto",
}

func init() {
	proto.RegisterType((*CGJoinRoom)(nil), "changsha.CGJoinRoom")
	proto.RegisterType((*GCPlayerInfo)(nil), "changsha.GCPlayerInfo")
	proto.RegisterType((*GCRoomInfo)(nil), "changsha.GCRoomInfo")
	proto.RegisterType((*GCJoinRoom)(nil), "changsha.GCJoinRoom")
	proto.RegisterType((*Compose)(nil), "changsha.Compose")
	proto.RegisterType((*GCJoinRoomBroadcast)(nil), "changsha.GCJoinRoomBroadcast")
	proto.RegisterType((*GCSelectBankerBroadcast)(nil), "changsha.GCSelectBankerBroadcast")
	proto.RegisterType((*GCDealCards)(nil), "changsha.GCDealCards")
	proto.RegisterType((*XiaoHu)(nil), "changsha.XiaoHu")
	proto.RegisterType((*XiaohuPlayer)(nil), "changsha.XiaohuPlayer")
	proto.RegisterType((*GCXiaoHuBroadcast)(nil), "changsha.GCXiaoHuBroadcast")
	proto.RegisterType((*CGPlayerPlayCard)(nil), "changsha.CGPlayerPlayCard")
	proto.RegisterType((*GCPlayerPlayCard)(nil), "changsha.GCPlayerPlayCard")
	proto.RegisterType((*GCPlayerMoCard)(nil), "changsha.GCPlayerMoCard")
	proto.RegisterType((*GCPlayerMoCardBroadcast)(nil), "changsha.GCPlayerMoCardBroadcast")
	proto.RegisterType((*Operation)(nil), "changsha.Operation")
	proto.RegisterType((*GCPlayerOperations)(nil), "changsha.GCPlayerOperations")
	proto.RegisterType((*GCPlayerChi)(nil), "changsha.GCPlayerChi")
	proto.RegisterType((*GCPlayerPeng)(nil), "changsha.GCPlayerPeng")
	proto.RegisterType((*GCPlayerGang)(nil), "changsha.GCPlayerGang")
	proto.RegisterType((*GCPlayerBu)(nil), "changsha.GCPlayerBu")
	proto.RegisterType((*RoundSettlePlayerInfo)(nil), "changsha.RoundSettlePlayerInfo")
	proto.RegisterType((*Hu)(nil), "changsha.Hu")
	proto.RegisterType((*GCPlayerHu)(nil), "changsha.GCPlayerHu")
	proto.RegisterType((*GCWaitPlayerPlayCard)(nil), "changsha.GCWaitPlayerPlayCard")
	proto.RegisterType((*CGPlayerOperate)(nil), "changsha.CGPlayerOperate")
	proto.RegisterType((*GCClear)(nil), "changsha.GCClear")
	proto.RegisterType((*GCReconnectPlayer)(nil), "changsha.GCReconnectPlayer")
	proto.RegisterType((*GCDisconnectPlayer)(nil), "changsha.GCDisconnectPlayer")
	proto.RegisterType((*GCPlayerGangMo)(nil), "changsha.GCPlayerGangMo")
	proto.RegisterType((*CGPlayerLeave)(nil), "changsha.CGPlayerLeave")
	proto.RegisterType((*GCPlayerLeave)(nil), "changsha.GCPlayerLeave")
	proto.RegisterType((*CGPlayerStart)(nil), "changsha.CGPlayerStart")
	proto.RegisterType((*GCPlayerStart)(nil), "changsha.GCPlayerStart")
	proto.RegisterType((*CGPlayerDissolve)(nil), "changsha.CGPlayerDissolve")
	proto.RegisterType((*GCPlayerDissolve)(nil), "changsha.GCPlayerDissolve")
	proto.RegisterType((*CGPlayerDissolveAgree)(nil), "changsha.CGPlayerDissolveAgree")
	proto.RegisterType((*GCPlayerDissolveAgree)(nil), "changsha.GCPlayerDissolveAgree")
	proto.RegisterType((*GCLiuJu)(nil), "changsha.GCLiuJu")
	proto.RegisterType((*SettleInfo)(nil), "changsha.SettleInfo")
	proto.RegisterType((*TotalSettlePlayerInfo)(nil), "changsha.TotalSettlePlayerInfo")
	proto.RegisterType((*GCTotalSettle)(nil), "changsha.GCTotalSettle")
	proto.RegisterType((*GCXiaoHuList)(nil), "changsha.GCXiaoHuList")
	proto.RegisterType((*CGXiaoHu)(nil), "changsha.CGXiaoHu")
	proto.RegisterType((*GCXiaoHu)(nil), "changsha.GCXiaoHu")
	proto.RegisterType((*CGXiaoHuPass)(nil), "changsha.CGXiaoHuPass")
	proto.RegisterType((*GCXiaoHuPass)(nil), "changsha.GCXiaoHuPass")
	proto.RegisterType((*GCHaiDiAsk)(nil), "changsha.GCHaiDiAsk")
	proto.RegisterType((*CGHaiDiAnswer)(nil), "changsha.CGHaiDiAnswer")
	proto.RegisterType((*GCHaiDiAnswer)(nil), "changsha.GCHaiDiAnswer")
	proto.RegisterType((*CGLeaveTime)(nil), "changsha.CGLeaveTime")
	proto.RegisterType((*GCLeaveTime)(nil), "changsha.GCLeaveTime")
	proto.RegisterType((*CGChat)(nil), "changsha.CGChat")
	proto.RegisterType((*GCChat)(nil), "changsha.GCChat")
	proto.RegisterExtension(E_CgJoinRoom)
	proto.RegisterExtension(E_GcJoinRoom)
	proto.RegisterExtension(E_GcJoinRoomBroadcast)
	proto.RegisterExtension(E_GcSelectBankerBroadcast)
	proto.RegisterExtension(E_GcDealCards)
	proto.RegisterExtension(E_GcXiaoHuBroadcast)
	proto.RegisterExtension(E_CgPlayerPlayCard)
	proto.RegisterExtension(E_GcPlayerPlayCard)
	proto.RegisterExtension(E_GcPlayerMoCard)
	proto.RegisterExtension(E_GcPlayerMoCardBroadcast)
	proto.RegisterExtension(E_GcPlayerOperations)
	proto.RegisterExtension(E_GcPlayerChi)
	proto.RegisterExtension(E_GcPlayerPeng)
	proto.RegisterExtension(E_GcPlayerGang)
	proto.RegisterExtension(E_GcPlayerBu)
	proto.RegisterExtension(E_GcPlayerHu)
	proto.RegisterExtension(E_GcWaitPlayerPlayCard)
	proto.RegisterExtension(E_CgPlayerOpreate)
	proto.RegisterExtension(E_GcClear)
	proto.RegisterExtension(E_GcReconnectPlayer)
	proto.RegisterExtension(E_GcDisconnectPlayer)
	proto.RegisterExtension(E_GcPlayerGangMo)
	proto.RegisterExtension(E_CgPlayerLeave)
	proto.RegisterExtension(E_GcPlayerLeave)
	proto.RegisterExtension(E_CgPlayerStart)
	proto.RegisterExtension(E_GcPlayerStart)
	proto.RegisterExtension(E_CgPlayerDissolve)
	proto.RegisterExtension(E_GcPlayerDissolve)
	proto.RegisterExtension(E_CgPlayerDissolveAgree)
	proto.RegisterExtension(E_GcPlayerDissolveAgree)
	proto.RegisterExtension(E_GcLiuJu)
	proto.RegisterExtension(E_GcTotalSettle)
	proto.RegisterExtension(E_GcXiaoHuList)
	proto.RegisterExtension(E_CgXiaoHu)
	proto.RegisterExtension(E_GcXiaohu)
	proto.RegisterExtension(E_CgXiaoHuPass)
	proto.RegisterExtension(E_GcXiaoHuPass)
	proto.RegisterExtension(E_GcHaiDiAsk)
	proto.RegisterExtension(E_CgHaiDiAnswer)
	proto.RegisterExtension(E_GcHaiDiAnswer)
	proto.RegisterExtension(E_CgLeaveTime)
	proto.RegisterExtension(E_GcLeaveTime)
	proto.RegisterExtension(E_CgChat)
	proto.RegisterExtension(E_GcChat)
}

func init() { proto.RegisterFile("changsha.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2033 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x57, 0x4f, 0x88, 0x23, 0x59,
	0x19, 0x27, 0xc9, 0x24, 0x9d, 0xfe, 0x92, 0x4e, 0x27, 0xd5, 0x9d, 0xe9, 0xea, 0xd9, 0xf9, 0x93,
	0x2d, 0xd6, 0x26, 0xb8, 0x33, 0xbd, 0xe3, 0x1c, 0x96, 0xd9, 0xb0, 0xae, 0x33, 0x5d, 0xed, 0xa6,
	0x67, 0x98, 0xd9, 0x0d, 0xd3, 0x03, 0xce, 0xc5, 0xc3, 0xeb, 0xca, 0x9b, 0x4a, 0x31, 0x49, 0x55,
	0xa8, 0xaa, 0xec, 0xce, 0x78, 0x14, 0xd9, 0x93, 0x88, 0x27, 0x11, 0x4f, 0x22, 0x9e, 0x44, 0x04,
	0x41, 0x16, 0xf5, 0x20, 0x1e, 0x45, 0xbc, 0x28, 0xe2, 0x41, 0x44, 0x3c, 0x88, 0x88, 0x07, 0x11,
	0xd9, 0x83, 0x88, 0x07, 0x79, 0xdf, 0xab, 0x57, 0xef, 0xbd, 0xaa, 0x97, 0xe9, 0xbd, 0x25, 0xef,
	0x7d, 0xbf, 0xdf, 0xf7, 0xff, 0x7b, 0x5f, 0x41, 0xc7, 0x9b, 0x91, 0xd0, 0x4f, 0x66, 0xe4, 0x70,
	0x19, 0x47, 0x69, 0x64, 0x35, 0xc5, 0xff, 0x4b, 0xfb, 0x3e, 0x59, 0xd0, 0x37, 0xce, 0x48, 0x12,
	0x78, 0x6f, 0x2c, 0xcf, 0xf8, 0x0f, 0x2e, 0xe4, 0x5c, 0x06, 0x70, 0xc7, 0xf7, 0xa3, 0x20, 0x7c,
	0x14, 0x45, 0x0b, 0xab, 0x03, 0x8d, 0x38, 0x8a, 0x16, 0xf7, 0xa6, 0x76, 0x65, 0x50, 0x1d, 0xd6,
	0x9c, 0x1f, 0x57, 0xa1, 0x3d, 0x76, 0x27, 0x73, 0xf2, 0x82, 0xc6, 0xf7, 0xc2, 0xa7, 0x91, 0xd5,
	0x85, 0xe6, 0x92, 0xff, 0xcb, 0x44, 0xac, 0x2d, 0xa8, 0x07, 0x0b, 0xe2, 0x53, 0xbb, 0x3a, 0xa8,
	0x0e, 0x37, 0x2d, 0x80, 0x6a, 0xb0, 0xb4, 0x6b, 0xf8, 0x7b, 0x0b, 0xea, 0x89, 0x17, 0xc5, 0xd4,
	0xbe, 0x80, 0x92, 0x0c, 0x1b, 0x25, 0x41, 0x1a, 0x44, 0xa1, 0x5d, 0x1f, 0x54, 0x87, 0x75, 0x14,
	0x48, 0x49, 0x4a, 0xed, 0x06, 0xfe, 0xdd, 0x86, 0x0d, 0x8f, 0xc4, 0xd3, 0xf7, 0x56, 0x0b, 0x7b,
	0x63, 0x50, 0x19, 0xd6, 0x19, 0x82, 0x1d, 0x3c, 0x08, 0x92, 0xd4, 0x6e, 0x0e, 0x6a, 0xc3, 0xba,
	0xb5, 0x0b, 0x6d, 0xa6, 0xdf, 0x15, 0xa7, 0x9b, 0x78, 0x7a, 0x00, 0x2d, 0x2f, 0x5a, 0x2c, 0xa3,
	0x84, 0xe2, 0x21, 0x0c, 0x6a, 0xc3, 0xd6, 0xad, 0xde, 0x61, 0x1e, 0x0f, 0x97, 0x5f, 0x5a, 0x3b,
	0xd0, 0x22, 0x5e, 0xba, 0x22, 0xf3, 0x53, 0xd4, 0xda, 0x12, 0x5a, 0x9f, 0x07, 0x24, 0x3a, 0x59,
	0x25, 0x76, 0x1b, 0xd9, 0xba, 0xd0, 0x0c, 0x9e, 0x32, 0x22, 0x1a, 0xda, 0x5b, 0x83, 0xea, 0xb0,
	0x69, 0xb5, 0xe1, 0x42, 0x48, 0x16, 0xd4, 0xee, 0xa0, 0x5b, 0x2d, 0xa8, 0x25, 0xf4, 0xb9, 0xbd,
	0x8d, 0xe8, 0x2e, 0x34, 0xe7, 0x91, 0x47, 0xd0, 0xa9, 0x2e, 0xbb, 0x76, 0x3e, 0xa9, 0x01, 0x8c,
	0x5d, 0x16, 0x4e, 0x8c, 0x58, 0x21, 0xa4, 0xd2, 0xe7, 0x2a, 0xe2, 0xf7, 0x60, 0xdb, 0x5b, 0xc5,
	0x31, 0x0d, 0xd3, 0x89, 0x88, 0x6b, 0x6d, 0x50, 0x19, 0xd6, 0xac, 0xcf, 0xc1, 0x6e, 0x76, 0xf1,
	0xfe, 0x92, 0xc6, 0xa8, 0x00, 0x9d, 0xbb, 0x80, 0xce, 0xed, 0x48, 0xe7, 0xf2, 0x6b, 0xe6, 0x49,
	0x4c, 0x17, 0x24, 0x08, 0x13, 0xbb, 0x8e, 0xf1, 0xdb, 0x85, 0x76, 0xc6, 0xc1, 0x02, 0x96, 0xd8,
	0x0d, 0xf4, 0x6f, 0x1f, 0x7a, 0xca, 0xe9, 0x43, 0x9a, 0xce, 0xa2, 0x69, 0x16, 0x70, 0x09, 0x78,
	0x14, 0xad, 0xc2, 0xa9, 0xdd, 0xc4, 0x53, 0xe1, 0xfe, 0xe6, 0xa0, 0x32, 0xdc, 0x64, 0x5a, 0xa2,
	0x0f, 0x43, 0xb4, 0x14, 0xd0, 0x23, 0x0b, 0x20, 0x8d, 0x52, 0x32, 0xe7, 0x10, 0x1e, 0xd4, 0x7d,
	0xe8, 0x4d, 0x83, 0x24, 0x89, 0xe6, 0x1f, 0xd0, 0xd3, 0x94, 0xc4, 0xe9, 0xe3, 0x60, 0x41, 0xed,
	0x36, 0x8a, 0x5f, 0x81, 0x3e, 0xf1, 0xfd, 0x98, 0xd2, 0xe3, 0x4c, 0x80, 0x3b, 0x9e, 0xd8, 0x5b,
	0x83, 0xda, 0xb0, 0x66, 0xf5, 0x60, 0xf3, 0x8c, 0x84, 0xcf, 0x68, 0x3c, 0x89, 0x12, 0x0c, 0x38,
	0xc6, 0xf8, 0x2b, 0xb3, 0x15, 0x79, 0x2f, 0x20, 0x51, 0x16, 0x75, 0x0b, 0x80, 0x9d, 0x84, 0xfe,
	0x93, 0x80, 0xf0, 0xb8, 0x37, 0x59, 0x72, 0x85, 0xd4, 0xdd, 0xb9, 0x6f, 0xf7, 0xf0, 0xb0, 0x0b,
	0xcd, 0xa7, 0x51, 0x7c, 0x16, 0x4c, 0xef, 0x2d, 0x6d, 0x4b, 0x40, 0xbd, 0x98, 0x92, 0x94, 0xa2,
	0x49, 0x3b, 0x68, 0xd2, 0x2e, 0xb4, 0xa3, 0x25, 0xc5, 0x16, 0x78, 0xfc, 0x62, 0x49, 0xed, 0x5d,
	0x74, 0xfb, 0x22, 0x74, 0x38, 0x96, 0xb5, 0x07, 0x4a, 0xf7, 0x31, 0x33, 0xbb, 0xd0, 0x9e, 0x93,
	0x24, 0x1d, 0x93, 0x05, 0xe7, 0xb8, 0xc8, 0x4e, 0x9d, 0x29, 0xcb, 0x7a, 0xde, 0x48, 0x07, 0xd0,
	0x8c, 0xb3, 0x0a, 0xc0, 0xbc, 0xb7, 0x6e, 0xed, 0xca, 0x8c, 0x29, 0xd5, 0x71, 0x08, 0x9d, 0x65,
	0xde, 0x5d, 0x98, 0xdf, 0x2a, 0xe6, 0xf7, 0xa2, 0x2a, 0x2d, 0xfb, 0xcf, 0xb9, 0x01, 0x1b, 0x4a,
	0x31, 0x67, 0x45, 0x8f, 0x36, 0x57, 0x44, 0x47, 0x79, 0x98, 0x6a, 0x46, 0x53, 0x77, 0x5c, 0xd8,
	0x91, 0x46, 0x1d, 0xc5, 0x11, 0x99, 0x7a, 0x24, 0x49, 0xad, 0xeb, 0xd0, 0xf6, 0x3d, 0xc9, 0x9a,
	0x59, 0xb8, 0x4e, 0xe7, 0x75, 0xd8, 0x1b, 0xbb, 0xa7, 0x74, 0x4e, 0xbd, 0xf4, 0x08, 0x33, 0x23,
	0x89, 0xb4, 0x64, 0xa1, 0x05, 0xce, 0x65, 0x68, 0x8d, 0xdd, 0x63, 0x4a, 0xe6, 0x58, 0x72, 0xd2,
	0xa0, 0x0a, 0x1a, 0xf4, 0x3a, 0x34, 0x9e, 0x60, 0xb3, 0xb1, 0x3c, 0xf0, 0xb6, 0x5b, 0x6f, 0xfd,
	0xbb, 0xd0, 0x66, 0xc2, 0xb3, 0x15, 0x37, 0xc6, 0x30, 0x7c, 0x5e, 0x13, 0x24, 0x4a, 0xe8, 0xba,
	0xd2, 0x0d, 0xae, 0xca, 0xf9, 0x22, 0xf4, 0xc6, 0x2e, 0xff, 0x2d, 0x4d, 0xbf, 0x09, 0xdd, 0xe7,
	0x0a, 0x39, 0x12, 0x54, 0x8a, 0xb1, 0x57, 0xd5, 0x3b, 0x03, 0xe8, 0xba, 0x63, 0xfe, 0x7b, 0x92,
	0xcd, 0x20, 0xd6, 0x1a, 0xcc, 0xe2, 0xcc, 0xf7, 0x5b, 0xd0, 0x15, 0x91, 0xcb, 0x25, 0xca, 0x46,
	0x0b, 0x0c, 0x0e, 0x00, 0xe7, 0x2a, 0x74, 0x04, 0xe6, 0x61, 0x64, 0xe0, 0x7c, 0x9d, 0x45, 0x5f,
	0xbd, 0x97, 0x2e, 0x94, 0xa8, 0x9d, 0x2f, 0xc3, 0xa6, 0x1c, 0x07, 0x7d, 0xd8, 0x8a, 0xc4, 0x1f,
	0x25, 0xc8, 0xea, 0x50, 0xc5, 0x38, 0x63, 0x03, 0x93, 0xd8, 0xa7, 0x38, 0x0f, 0x70, 0x76, 0xd7,
	0x59, 0x75, 0xf1, 0xb3, 0x7b, 0xe1, 0x94, 0x3e, 0xc7, 0x09, 0x5e, 0x77, 0xee, 0x80, 0x25, 0x6c,
	0xc9, 0xd5, 0x24, 0xd6, 0x67, 0x15, 0x3d, 0x4a, 0x18, 0x4d, 0x23, 0xca, 0xf9, 0x02, 0xab, 0x0e,
	0xce, 0xe0, 0xce, 0x82, 0xf3, 0x82, 0xa3, 0xd9, 0x5a, 0xc3, 0x9a, 0x38, 0x94, 0x0f, 0xd2, 0x84,
	0x86, 0xfe, 0xb9, 0xe1, 0xbd, 0x23, 0xe5, 0xc7, 0xe4, 0x7c, 0x79, 0x76, 0xef, 0x93, 0xd0, 0xc7,
	0x78, 0x61, 0x24, 0x9c, 0xb7, 0x59, 0x63, 0x73, 0x86, 0xa3, 0xd5, 0xb9, 0xf8, 0x0e, 0x34, 0xce,
	0x56, 0x0a, 0xfa, 0xa3, 0x0a, 0xf4, 0x71, 0x30, 0x9e, 0xd2, 0x34, 0x9d, 0xd3, 0x97, 0x3e, 0xa5,
	0x85, 0x67, 0xac, 0xba, 0xee, 0x19, 0x2b, 0x45, 0xa5, 0xf8, 0xd2, 0x5a, 0x5a, 0x5b, 0xd4, 0x31,
	0x70, 0x07, 0x50, 0x3d, 0x59, 0x31, 0xf3, 0x66, 0x2b, 0xbd, 0x18, 0x72, 0x23, 0xaa, 0x58, 0x42,
	0x1f, 0x57, 0xa4, 0xbf, 0x27, 0x2b, 0xeb, 0x32, 0x03, 0x28, 0x59, 0x6d, 0x4b, 0x73, 0x4e, 0x56,
	0xd6, 0x5b, 0xd0, 0x4d, 0x14, 0xbf, 0x14, 0xb3, 0xaf, 0x49, 0x39, 0xb3, 0xfb, 0x22, 0x6c, 0x35,
	0x61, 0x47, 0x18, 0x90, 0x68, 0x42, 0x82, 0x04, 0x5f, 0x38, 0x9c, 0xbe, 0xd9, 0x89, 0x78, 0x1f,
	0xea, 0xf8, 0x3e, 0xec, 0xc1, 0xf6, 0x34, 0x20, 0xe1, 0x84, 0x44, 0xf9, 0x83, 0xd9, 0x40, 0xc3,
	0x87, 0xb0, 0x3b, 0x76, 0xbf, 0x44, 0x82, 0xf4, 0xbc, 0x06, 0x74, 0xde, 0x82, 0x6d, 0xd1, 0xc8,
	0xbc, 0x32, 0xa9, 0x75, 0x00, 0x9b, 0x79, 0x0d, 0x67, 0xe3, 0xd0, 0x58, 0xbf, 0x9b, 0xb0, 0x31,
	0x76, 0xdd, 0x39, 0x25, 0xb1, 0xf3, 0x19, 0x36, 0x55, 0x1e, 0x51, 0x2f, 0x0a, 0x43, 0xea, 0xa5,
	0xeb, 0x46, 0x94, 0x73, 0xc0, 0x7a, 0xe6, 0x38, 0x48, 0xce, 0x93, 0xbb, 0x29, 0xe7, 0x00, 0x2b,
	0xd4, 0x87, 0xd1, 0x4b, 0x4b, 0x8d, 0x65, 0x74, 0x1b, 0xb6, 0x84, 0x1b, 0x0f, 0x28, 0xf9, 0x80,
	0x3a, 0xaf, 0xc2, 0x96, 0xa0, 0xc0, 0x03, 0x83, 0x16, 0x05, 0x83, 0xef, 0xb2, 0x8a, 0xc1, 0x03,
	0x03, 0xe6, 0x35, 0x39, 0xf7, 0xc4, 0x93, 0x6d, 0x96, 0x12, 0x44, 0x2f, 0x91, 0x3a, 0x80, 0x7e,
	0x91, 0xeb, 0x2e, 0xdb, 0x05, 0x58, 0x05, 0x13, 0xf6, 0x03, 0xe5, 0x9a, 0xce, 0x6d, 0xe8, 0x17,
	0xd9, 0x4c, 0x72, 0x86, 0xfa, 0x3d, 0x66, 0x19, 0x7a, 0x10, 0xac, 0xee, 0x9b, 0xab, 0xb3, 0xf2,
	0xa9, 0xaa, 0xd3, 0xb9, 0x01, 0xc0, 0xcf, 0xb0, 0x56, 0x2d, 0x00, 0x4e, 0xa4, 0x74, 0x4e, 0x0b,
	0x6a, 0xe1, 0x6a, 0x91, 0x4d, 0x99, 0x67, 0xd0, 0x7f, 0xcc, 0x56, 0xa0, 0x52, 0x95, 0x5f, 0x87,
	0x4e, 0x92, 0xf3, 0x28, 0x06, 0x28, 0xdb, 0x80, 0xae, 0x07, 0x37, 0x29, 0xde, 0xcb, 0xd5, 0x52,
	0x87, 0xd6, 0xd0, 0xc3, 0x53, 0x96, 0x32, 0x45, 0x9d, 0x75, 0x04, 0xfb, 0xa9, 0x49, 0xbb, 0xd9,
	0x61, 0xa3, 0xa1, 0xce, 0x35, 0x36, 0x27, 0x9f, 0xe4, 0x43, 0x43, 0xdd, 0x8a, 0xf9, 0xcb, 0x7d,
	0x09, 0x9a, 0xee, 0x38, 0x7b, 0xbb, 0x3b, 0xd0, 0xe0, 0x97, 0xd9, 0x1b, 0xf5, 0x0e, 0x34, 0x05,
	0xd8, 0x50, 0xb5, 0x83, 0x5c, 0xba, 0x8a, 0x8d, 0x55, 0x7e, 0xa0, 0x07, 0xd0, 0x16, 0xdc, 0x13,
	0x92, 0x24, 0x86, 0xba, 0x19, 0x48, 0xf3, 0xd6, 0x48, 0x5c, 0x65, 0x63, 0xeb, 0x84, 0x04, 0xc7,
	0xc1, 0xdd, 0xe4, 0x99, 0xe1, 0xfe, 0x0a, 0xab, 0x7c, 0x7e, 0x1f, 0x26, 0x1f, 0xd2, 0x98, 0x35,
	0xd3, 0xd3, 0x39, 0xf1, 0xb3, 0x82, 0xfb, 0x3c, 0x0b, 0xaa, 0x7a, 0x6d, 0xec, 0x3e, 0x04, 0x54,
	0xc5, 0x37, 0x41, 0x36, 0xbf, 0x2a, 0xc3, 0xba, 0xf3, 0x0a, 0xb4, 0xdc, 0x31, 0x36, 0x1d, 0x5b,
	0x09, 0x0b, 0xdc, 0x37, 0xd8, 0xa3, 0x27, 0x2f, 0x5f, 0xc6, 0x5c, 0x19, 0x36, 0x9d, 0x03, 0x68,
	0xb8, 0x63, 0x77, 0x46, 0x52, 0x56, 0x63, 0xe9, 0x8b, 0x65, 0x56, 0x70, 0xec, 0xeb, 0x28, 0x0a,
	0x53, 0x1a, 0xa6, 0x68, 0x41, 0xdb, 0x79, 0x13, 0x1a, 0x63, 0xf7, 0x7c, 0x39, 0x96, 0xad, 0x84,
	0x86, 0x53, 0x1a, 0xf3, 0xfa, 0x19, 0xbd, 0x09, 0xe0, 0xf9, 0xf9, 0xa6, 0xda, 0x3a, 0x5c, 0x9e,
	0x1d, 0x3e, 0xa4, 0x49, 0xc2, 0xbe, 0xe1, 0x7e, 0xbb, 0x3d, 0xa8, 0xe8, 0xd5, 0x29, 0x3f, 0x0e,
	0x19, 0xce, 0xf7, 0xcc, 0xb8, 0x3f, 0x96, 0x70, 0x72, 0xed, 0x1c, 0x9d, 0xc0, 0x8e, 0xc4, 0xc9,
	0xed, 0x45, 0x23, 0xf8, 0x2b, 0x27, 0xb8, 0x62, 0x22, 0xc8, 0x21, 0xa3, 0x09, 0xec, 0xf9, 0x9e,
	0x79, 0x13, 0xd5, 0xd8, 0xfe, 0xc9, 0xd9, 0x5e, 0x55, 0xd9, 0x8c, 0xb0, 0xd1, 0x6d, 0x68, 0xf9,
	0x9e, 0xdc, 0x56, 0x35, 0x96, 0xff, 0x70, 0x96, 0xbe, 0xca, 0x92, 0x8b, 0x8e, 0x8e, 0xa1, 0xe7,
	0x7b, 0xc5, 0xa5, 0x52, 0xc3, 0x7f, 0xb5, 0x8b, 0xf8, 0x57, 0x54, 0x7c, 0x01, 0x30, 0x3a, 0x82,
	0xae, 0xe7, 0x17, 0x1e, 0x2c, 0x8d, 0xe4, 0xeb, 0x9c, 0xe4, 0x92, 0x9a, 0x11, 0x5d, 0x9e, 0x71,
	0x88, 0x6d, 0xde, 0xcc, 0xf1, 0xad, 0x12, 0x47, 0x71, 0x4b, 0x1d, 0xbd, 0x03, 0x1d, 0xc1, 0x91,
	0x6d, 0xa1, 0x1a, 0xc3, 0x77, 0x39, 0x83, 0x5d, 0x66, 0xe0, 0xd2, 0x3c, 0x33, 0xe6, 0x2d, 0x55,
	0x23, 0xfa, 0x41, 0xb7, 0x9c, 0x19, 0x23, 0x6c, 0xf4, 0x2e, 0x58, 0x82, 0x51, 0xd9, 0x35, 0x35,
	0xb2, 0x9f, 0x70, 0xb2, 0xcb, 0x65, 0x32, 0x89, 0xe0, 0x19, 0x96, 0x1b, 0xa7, 0x46, 0xf0, 0x8b,
	0x6e, 0x39, 0xc3, 0xb9, 0xe8, 0x68, 0x24, 0xbf, 0x92, 0x70, 0xd5, 0xd4, 0xa0, 0xbf, 0xe2, 0x50,
	0xc3, 0x37, 0x13, 0x93, 0x55, 0xb1, 0xb8, 0x76, 0x6a, 0xd8, 0xdf, 0xad, 0xc5, 0x32, 0x59, 0xde,
	0x67, 0xf9, 0xc2, 0xa9, 0x21, 0xff, 0xd4, 0x2d, 0xf7, 0x99, 0x90, 0x54, 0x71, 0x27, 0x05, 0xdc,
	0xdf, 0xd6, 0xe2, 0x4e, 0x56, 0xa3, 0xfb, 0xb0, 0xeb, 0x7b, 0x86, 0xc5, 0x49, 0x63, 0xf8, 0x17,
	0x67, 0xb8, 0xaa, 0x32, 0x94, 0x31, 0xa3, 0x3b, 0xb0, 0x2d, 0xea, 0xf9, 0xfd, 0x25, 0x7e, 0x66,
	0xeb, 0x34, 0xff, 0xe5, 0x34, 0xfb, 0xe5, 0x72, 0xce, 0x36, 0xb1, 0xd1, 0x4d, 0xd8, 0xf0, 0x3d,
	0xdc, 0xb0, 0x74, 0xe4, 0xd7, 0x7a, 0x88, 0xec, 0xa9, 0x06, 0xa0, 0x18, 0xef, 0xc4, 0xe2, 0x22,
	0xa6, 0x61, 0xbf, 0xd1, 0x2b, 0x77, 0x62, 0x01, 0xc0, 0xeb, 0xad, 0xb4, 0xa7, 0x69, 0x34, 0xdf,
	0xee, 0x95, 0xeb, 0xad, 0x88, 0x50, 0x3b, 0x29, 0xdb, 0xe3, 0x34, 0x8e, 0xef, 0xf5, 0xd6, 0x75,
	0x12, 0x97, 0x1e, 0xbd, 0x0d, 0x5b, 0x22, 0x82, 0x7c, 0x89, 0xd3, 0xe0, 0x3f, 0xe4, 0xf0, 0xbd,
	0x72, 0xfc, 0x50, 0x98, 0xa1, 0x85, 0x76, 0x03, 0xfa, 0xe3, 0x12, 0x5a, 0xdb, 0x17, 0x55, 0xdd,
	0x7c, 0x19, 0xd4, 0xd0, 0xbf, 0x5c, 0xab, 0x1b, 0x85, 0x55, 0xdd, 0x06, 0xf4, 0xaf, 0xd7, 0xea,
	0xe6, 0x68, 0x65, 0x12, 0xe6, 0xfb, 0xa3, 0x46, 0xf0, 0xfb, 0xde, 0xba, 0x49, 0x28, 0xe4, 0xd5,
	0x49, 0x68, 0xe6, 0xf8, 0x73, 0x6f, 0xdd, 0x24, 0xcc, 0x39, 0x1e, 0x40, 0xbf, 0x68, 0x07, 0xdf,
	0x3c, 0x35, 0xa2, 0xbf, 0x73, 0xa2, 0x6b, 0xeb, 0x8d, 0x41, 0x10, 0x63, 0x2b, 0x5a, 0x64, 0x60,
	0xfb, 0x77, 0x89, 0xcd, 0xb8, 0xfc, 0xf2, 0xde, 0xe0, 0xbb, 0xad, 0x86, 0xff, 0x9f, 0xa1, 0x37,
	0x50, 0x8c, 0xe7, 0x44, 0xdd, 0x15, 0x35, 0xdc, 0x47, 0x56, 0x39, 0x27, 0x8a, 0x30, 0x9f, 0x62,
	0xca, 0x52, 0xa8, 0x81, 0xbf, 0x69, 0x95, 0xa7, 0x98, 0x94, 0x1d, 0xdd, 0x82, 0xa6, 0xe7, 0x67,
	0x3b, 0xa1, 0x86, 0xfb, 0x0e, 0xc7, 0x59, 0x6a, 0xe8, 0xb8, 0x1c, 0xc3, 0x70, 0x7d, 0xb3, 0x02,
	0xe6, 0xfb, 0x25, 0x8c, 0xd0, 0xc5, 0x6c, 0x14, 0x7a, 0x70, 0x33, 0xd4, 0x70, 0x3f, 0x2a, 0xd9,
	0xa8, 0xee, 0x99, 0xaa, 0x7f, 0x65, 0xec, 0x4f, 0xd7, 0xfa, 0x87, 0x58, 0x9c, 0xb6, 0xf9, 0xbe,
	0xa9, 0x21, 0x7f, 0x63, 0x95, 0xa7, 0xad, 0x90, 0xe4, 0x3d, 0xa6, 0x2e, 0x9a, 0x1a, 0xf4, 0x0f,
	0x56, 0xb9, 0xc7, 0x14, 0x61, 0x9e, 0xcf, 0xb5, 0xe8, 0xbf, 0x18, 0xf2, 0xa9, 0xa2, 0x6f, 0x43,
	0xcb, 0xf3, 0xe5, 0x22, 0xaa, 0x61, 0xff, 0x61, 0x15, 0xdf, 0x42, 0x65, 0xa1, 0xe5, 0xaf, 0xe8,
	0x1a, 0xe4, 0x27, 0x56, 0xf9, 0x15, 0x95, 0xc8, 0x43, 0x68, 0x78, 0x3e, 0xdf, 0x52, 0x55, 0xd0,
	0xcf, 0xf6, 0x10, 0xd4, 0x55, 0xd5, 0x31, 0x29, 0x26, 0xef, 0x7b, 0x65, 0xf9, 0x9f, 0x97, 0xe4,
	0xf9, 0xee, 0xfb, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x83, 0x36, 0x2b, 0x08, 0xf6, 0x18, 0x00,
	0x00,
}

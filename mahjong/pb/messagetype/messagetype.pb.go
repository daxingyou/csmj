// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messagetype.proto

/*
Package messagetype is a generated protocol buffer package.

It is generated from these files:
	messagetype.proto

It has these top-level messages:
*/
package messagetype

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_SessionOpen  MessageType = 101
	MessageType_SessionClose MessageType = 102
	// 登陆
	MessageType_CGLoginType MessageType = 1001
	MessageType_GCLoginType MessageType = 1002
	// ping
	MessageType_CGPingType MessageType = 1003
	MessageType_GCPingType MessageType = 1004
	// 错误信息
	MessageType_GCError MessageType = 1101
	// 长沙麻将
	// 加入房间
	MessageType_CGJoinRoomType          MessageType = 2001
	MessageType_GCJoinRoomType          MessageType = 2002
	MessageType_GCJoinRoomBroadcastType MessageType = 2003
	// 选择庄家
	MessageType_GCSelectBankerBroadcastType MessageType = 2004
	// 发牌
	MessageType_GCDealCardsType MessageType = 2005
	// 小胡检查
	MessageType_GCXiaoHuBroadcastType MessageType = 2006
	// 打牌
	MessageType_CGPlayerPlayCardType MessageType = 2007
	// 打牌
	MessageType_GCPlayerPlayCardType MessageType = 2008
	// 摸牌
	MessageType_GCPlayerMoCardType MessageType = 2009
	// 摸牌广播
	MessageType_GCPlayerMoCardBroadcastType MessageType = 2010
	// 玩家操作
	MessageType_GCPlayerOperationsType MessageType = 2011
	// 吃
	MessageType_GCPlayerChiType MessageType = 2012
	// 碰
	MessageType_GCPlayerPengType MessageType = 2013
	// 补
	MessageType_GCPlayerBuType MessageType = 2014
	// 杠
	MessageType_GCPlayerGangType MessageType = 2015
	// 杠摸
	MessageType_GCPlayerGangMoType MessageType = 2016
	// 胡牌
	MessageType_GCPlayerHuType MessageType = 2017
	// 等候玩家出牌
	MessageType_GCWaitPlayerPlayCardType MessageType = 2018
	// 玩家操作
	MessageType_CGPlayerOperateType MessageType = 2019
	// 清理桌面
	MessageType_GCClearType MessageType = 2020
	// 重新连接
	MessageType_GCReconnectPlayerType MessageType = 2021
	// 断开连接
	MessageType_GCDisconnectPlayerType MessageType = 2022
	// 离开房间
	MessageType_CGPlayerLeaveType MessageType = 2023
	// 离开房间
	MessageType_GCPlayerLeaveType MessageType = 2024
	// 准备开始
	MessageType_CGPlayerStartType MessageType = 2025
	// 准备开始
	MessageType_GCPlayerStartType MessageType = 2026
	// 申请解散
	MessageType_CGPlayerDissolveType MessageType = 2027
	// 申请解散
	MessageType_GCPlayerDissolveType MessageType = 2028
	// 申请解散 同意或不同意
	MessageType_CGPlayerDissolveAgreeType MessageType = 2029
	// 申请解散 同意或不同意
	MessageType_GCPlayerDissolveAgreeType MessageType = 2030
	// 流局
	MessageType_GCLiuJuType MessageType = 2031
	// 总结算
	MessageType_GCTotalSettleType MessageType = 2032
	// 小胡列表
	MessageType_GCXiaoHuListType MessageType = 2033
	// 小胡
	MessageType_CGXiaoHuType MessageType = 2034
	// 小胡
	MessageType_GCXiaohuType MessageType = 2035
	// 小胡过
	MessageType_CGXiaoHuPassType MessageType = 2036
	// 小胡过
	MessageType_GCXiaoHuPassType MessageType = 2037
	// 海底牌轮流
	MessageType_GCHaiDiAskType MessageType = 2039
	// 海底牌回答
	MessageType_CGHaiDiAnswerType MessageType = 2040
	// 海底牌广播
	MessageType_GCHaiDiAnswerType MessageType = 2041
	// 玩家自主暂时离开
	MessageType_CGLeaveTimeType MessageType = 2042
	// 玩家自主暂时离开广播
	MessageType_GCLeaveTimeType MessageType = 2043
	// 聊天
	MessageType_CGChatType MessageType = 3001
	MessageType_GCChatType MessageType = 3002
)

var MessageType_name = map[int32]string{
	101:  "SessionOpen",
	102:  "SessionClose",
	1001: "CGLoginType",
	1002: "GCLoginType",
	1003: "CGPingType",
	1004: "GCPingType",
	1101: "GCError",
	2001: "CGJoinRoomType",
	2002: "GCJoinRoomType",
	2003: "GCJoinRoomBroadcastType",
	2004: "GCSelectBankerBroadcastType",
	2005: "GCDealCardsType",
	2006: "GCXiaoHuBroadcastType",
	2007: "CGPlayerPlayCardType",
	2008: "GCPlayerPlayCardType",
	2009: "GCPlayerMoCardType",
	2010: "GCPlayerMoCardBroadcastType",
	2011: "GCPlayerOperationsType",
	2012: "GCPlayerChiType",
	2013: "GCPlayerPengType",
	2014: "GCPlayerBuType",
	2015: "GCPlayerGangType",
	2016: "GCPlayerGangMoType",
	2017: "GCPlayerHuType",
	2018: "GCWaitPlayerPlayCardType",
	2019: "CGPlayerOperateType",
	2020: "GCClearType",
	2021: "GCReconnectPlayerType",
	2022: "GCDisconnectPlayerType",
	2023: "CGPlayerLeaveType",
	2024: "GCPlayerLeaveType",
	2025: "CGPlayerStartType",
	2026: "GCPlayerStartType",
	2027: "CGPlayerDissolveType",
	2028: "GCPlayerDissolveType",
	2029: "CGPlayerDissolveAgreeType",
	2030: "GCPlayerDissolveAgreeType",
	2031: "GCLiuJuType",
	2032: "GCTotalSettleType",
	2033: "GCXiaoHuListType",
	2034: "CGXiaoHuType",
	2035: "GCXiaohuType",
	2036: "CGXiaoHuPassType",
	2037: "GCXiaoHuPassType",
	2039: "GCHaiDiAskType",
	2040: "CGHaiDiAnswerType",
	2041: "GCHaiDiAnswerType",
	2042: "CGLeaveTimeType",
	2043: "GCLeaveTimeType",
	3001: "CGChatType",
	3002: "GCChatType",
}
var MessageType_value = map[string]int32{
	"SessionOpen":                 101,
	"SessionClose":                102,
	"CGLoginType":                 1001,
	"GCLoginType":                 1002,
	"CGPingType":                  1003,
	"GCPingType":                  1004,
	"GCError":                     1101,
	"CGJoinRoomType":              2001,
	"GCJoinRoomType":              2002,
	"GCJoinRoomBroadcastType":     2003,
	"GCSelectBankerBroadcastType": 2004,
	"GCDealCardsType":             2005,
	"GCXiaoHuBroadcastType":       2006,
	"CGPlayerPlayCardType":        2007,
	"GCPlayerPlayCardType":        2008,
	"GCPlayerMoCardType":          2009,
	"GCPlayerMoCardBroadcastType": 2010,
	"GCPlayerOperationsType":      2011,
	"GCPlayerChiType":             2012,
	"GCPlayerPengType":            2013,
	"GCPlayerBuType":              2014,
	"GCPlayerGangType":            2015,
	"GCPlayerGangMoType":          2016,
	"GCPlayerHuType":              2017,
	"GCWaitPlayerPlayCardType":    2018,
	"CGPlayerOperateType":         2019,
	"GCClearType":                 2020,
	"GCReconnectPlayerType":       2021,
	"GCDisconnectPlayerType":      2022,
	"CGPlayerLeaveType":           2023,
	"GCPlayerLeaveType":           2024,
	"CGPlayerStartType":           2025,
	"GCPlayerStartType":           2026,
	"CGPlayerDissolveType":        2027,
	"GCPlayerDissolveType":        2028,
	"CGPlayerDissolveAgreeType":   2029,
	"GCPlayerDissolveAgreeType":   2030,
	"GCLiuJuType":                 2031,
	"GCTotalSettleType":           2032,
	"GCXiaoHuListType":            2033,
	"CGXiaoHuType":                2034,
	"GCXiaohuType":                2035,
	"CGXiaoHuPassType":            2036,
	"GCXiaoHuPassType":            2037,
	"GCHaiDiAskType":              2039,
	"CGHaiDiAnswerType":           2040,
	"GCHaiDiAnswerType":           2041,
	"CGLeaveTimeType":             2042,
	"GCLeaveTimeType":             2043,
	"CGChatType":                  3001,
	"GCChatType":                  3002,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterEnum("messagetype.MessageType", MessageType_name, MessageType_value)
}

func init() { proto.RegisterFile("messagetype.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x94, 0x49, 0x6f, 0x13, 0x31,
	0x14, 0xc7, 0x8f, 0x81, 0x97, 0x08, 0x4f, 0xdc, 0x25, 0x2d, 0x05, 0xc4, 0x99, 0x03, 0xdf, 0xa1,
	0x71, 0x90, 0xa3, 0x2a, 0x51, 0xa3, 0xa6, 0x12, 0x5c, 0xad, 0xd4, 0x24, 0x56, 0x27, 0xe3, 0xc8,
	0x9e, 0x80, 0xf2, 0xc9, 0x10, 0x7c, 0x07, 0x0e, 0xec, 0xfb, 0xbe, 0x76, 0x61, 0x07, 0xb1, 0x5d,
	0xd0, 0xf8, 0x79, 0x32, 0x75, 0xe8, 0x25, 0x52, 0x7e, 0xff, 0xff, 0xb3, 0x9f, 0xff, 0xef, 0x69,
	0xa0, 0x3a, 0x94, 0xd6, 0x8a, 0xbe, 0x4c, 0x27, 0x23, 0x79, 0x76, 0x64, 0x74, 0xaa, 0x69, 0xf9,
	0x00, 0x3a, 0x73, 0xe5, 0x28, 0x94, 0xdb, 0xf8, 0x7f, 0x73, 0x32, 0x92, 0x94, 0x40, 0xb9, 0x2b,
	0xad, 0x55, 0x3a, 0x59, 0x1f, 0xc9, 0x24, 0x92, 0x34, 0x82, 0x8a, 0x07, 0x2c, 0xd6, 0x56, 0x46,
	0x17, 0x69, 0x04, 0x65, 0xc6, 0x5b, 0xba, 0xaf, 0x92, 0xac, 0x22, 0xda, 0x29, 0x65, 0x84, 0xb3,
	0x82, 0xec, 0x96, 0x28, 0x01, 0x60, 0xbc, 0xa3, 0x92, 0xbe, 0x03, 0x7b, 0x0e, 0x70, 0x36, 0x05,
	0xfb, 0x25, 0x5a, 0x81, 0x12, 0x67, 0xe7, 0x8c, 0xd1, 0x26, 0xba, 0x7e, 0x84, 0xce, 0xc1, 0x31,
	0xc6, 0xd7, 0xb4, 0x4a, 0x36, 0xb4, 0x1e, 0x3a, 0xcb, 0x0d, 0x92, 0x41, 0xce, 0x02, 0x78, 0x93,
	0xd0, 0x13, 0x50, 0x2b, 0x60, 0xdd, 0x68, 0xb1, 0xd5, 0x13, 0x36, 0x75, 0xea, 0x2d, 0x42, 0x4f,
	0xc3, 0x0a, 0x67, 0x5d, 0x19, 0xcb, 0x5e, 0x5a, 0x17, 0xc9, 0xb6, 0x34, 0xa1, 0xe3, 0x36, 0xa1,
	0xf3, 0x40, 0x38, 0x6b, 0x48, 0x11, 0x33, 0x61, 0xb6, 0xac, 0xa3, 0x77, 0x08, 0x3d, 0x0e, 0x0b,
	0x9c, 0x5d, 0x50, 0x42, 0x37, 0xc7, 0x61, 0xc5, 0x5d, 0x42, 0x97, 0x61, 0x9e, 0xf1, 0x4e, 0x2c,
	0x26, 0xd2, 0x64, 0xbf, 0x59, 0x9d, 0x93, 0xee, 0x39, 0x89, 0xb3, 0x43, 0xa4, 0xfb, 0x84, 0xd6,
	0x80, 0xe6, 0x52, 0x5b, 0x4f, 0x85, 0x07, 0xbe, 0xc5, 0x83, 0x42, 0x78, 0xe1, 0x43, 0x42, 0x57,
	0x60, 0x31, 0x77, 0xac, 0x8f, 0xa4, 0x11, 0xa9, 0xd2, 0x09, 0x76, 0xfa, 0xc8, 0xf7, 0x8f, 0x22,
	0x1b, 0x28, 0x47, 0x1f, 0x13, 0xba, 0x00, 0xd1, 0xb4, 0x11, 0xe9, 0x43, 0x7e, 0xe2, 0x13, 0x44,
	0x5c, 0x1f, 0x3b, 0xf8, 0x34, 0xf0, 0x72, 0xe1, 0xbd, 0xcf, 0x82, 0x86, 0x33, 0xdc, 0xd6, 0x4e,
	0x78, 0x1e, 0x1c, 0xd2, 0xc4, 0x43, 0x5e, 0x10, 0x7a, 0x12, 0x96, 0x38, 0x3b, 0x2f, 0x54, 0x7a,
	0xc8, 0xeb, 0x5f, 0x12, 0xba, 0x04, 0x73, 0x79, 0x66, 0xf8, 0x04, 0xb7, 0x5d, 0xd1, 0x2b, 0x82,
	0xbb, 0xc2, 0x62, 0x29, 0x8c, 0x23, 0xaf, 0x7d, 0xf6, 0x1b, 0xb2, 0xa7, 0x93, 0x44, 0xf6, 0xfc,
	0x79, 0x4e, 0x7b, 0xe3, 0xa3, 0x68, 0x28, 0xfb, 0xbf, 0xf8, 0x96, 0xd0, 0x45, 0xa8, 0xe6, 0x97,
	0xb4, 0xa4, 0xb8, 0x84, 0x57, 0xbc, 0x73, 0x3c, 0x6f, 0xb8, 0xe0, 0xef, 0x03, 0x7f, 0x37, 0x15,
	0x06, 0xf3, 0xde, 0x09, 0xfc, 0x05, 0xdf, 0x0d, 0x06, 0xdf, 0x50, 0xd6, 0xea, 0xd8, 0x1f, 0xb5,
	0x17, 0x0c, 0x3e, 0x90, 0xf6, 0x09, 0x3d, 0x05, 0xcb, 0xb3, 0x55, 0xab, 0x7d, 0x23, 0x51, 0xff,
	0xe0, 0xf4, 0xd9, 0xd2, 0x42, 0xff, 0xe8, 0x03, 0x6a, 0xa9, 0xf1, 0x1a, 0x66, 0xfd, 0xc9, 0xf7,
	0xb7, 0xa9, 0x53, 0x11, 0x77, 0x65, 0x9a, 0xc6, 0xe8, 0xfc, 0xec, 0x07, 0x89, 0x4b, 0xdb, 0x52,
	0x7e, 0x7d, 0xbe, 0x10, 0x5a, 0x85, 0x0a, 0xe3, 0x88, 0x1d, 0xfa, 0xea, 0x10, 0x3a, 0x07, 0x88,
	0xbe, 0xb9, 0xe2, 0xdc, 0xd5, 0x11, 0x16, 0xd7, 0xeb, 0x7b, 0x70, 0xe6, 0x14, 0xff, 0xf0, 0x3b,
	0xd0, 0x14, 0xaa, 0xa1, 0x56, 0xed, 0xb6, 0x83, 0x3f, 0x7d, 0x9e, 0x08, 0x13, 0x7b, 0xd9, 0xcf,
	0xe5, 0x97, 0xef, 0x77, 0x96, 0xff, 0x76, 0xab, 0xcb, 0x38, 0x4e, 0x44, 0x0d, 0xf1, 0x15, 0x7f,
	0xfc, 0x42, 0x87, 0xf4, 0x2f, 0xc1, 0x0f, 0x08, 0x1b, 0x08, 0x7c, 0xd5, 0xd5, 0x1a, 0x7e, 0x40,
	0xa6, 0xe0, 0x5a, 0xed, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xc8, 0xa3, 0x3d, 0xda, 0x04,
	0x00, 0x00,
}
